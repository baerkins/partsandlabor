// Media Breakpoints
// =================

///
/// Create a new breakpoint. Use in conjunction with breakpoint variables.
///
/// @param {string} $size  - Breakpoint size
/// @param {string} $attr [min-width] - Media break attribute (`min-width` or `max-width`)
/// @param {string} $media [only screen] - Media type
///
/// @example scss - Basic Usage Sass
///   div {
///     font-size: 12px;
///
///     @include break($medium) {
///       font-size: 16px;
///     }
///   }
///
///   div {
///     font-size: 16px;
///
///     @include break($medium, max-width) {
///       font-size: 10px;
///     }
///   }
///
/// @group parts
/// @since 1.0.0
///
@mixin break($size, $attr: min-width, $media: only screen ) {
  @media #{$media} and (#{$attr}: #{$size}) {
    @content;
  }
}

// Grid Wrappers
// =============

///
/// Create a wrapper for a row of grid elements
///
/// @example scss - Basic Usage Sass
///   .row {
///     @include row;
///   }
///
/// @group parts
/// @since 1.0.0
///
@mixin row {
  width: 100%;
  @include clearfix;
}

///
/// Create a wrapper for a row of flexbox grid elements
///
/// @example scss - Basic Usage Sass
///   .flow-row {
///     @include flex-row;
///   }
///
/// @group parts
/// @since 1.0.0
///
@mixin flex-row( $align: false, $justify: space-between, $reverse: false, $wrap: true ) {
  width: 100%;
  display: flex;
  justify-content: $justify;

  @if $align {
    align-items: $align;
  }

  @if $reverse {
    flex-direction: row-reverse;
  }

  @if $wrap {
    flex-wrap: wrap;
  }

}

///
/// Create a container for content
///
/// @param {string} $width [$fluid-container] - Width of the container
/// @param {bool} $fluid [true] - Whether the container should always
/// be fluid or be adaptive. If false, max-widths will be set according
/// to `$active-breakpoints`
///
/// @example scss - Basic Usage Sass
///   .container {
///     @include container;
///   }
///
/// @group parts
/// @since 1.0.0
///
@mixin base-container($width: $fluid-container, $fluid: true) {
  margin-left: auto;
  margin-right: auto;
  width: $width;

  @if $fluid == false {

    @each $bp, $bpc in $active-breakpoints {

      @include break($bp) {
        width: $bpc;
      }
    }
  }
}
