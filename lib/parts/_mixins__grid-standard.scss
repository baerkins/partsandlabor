// Standard Grid Mixin
// ===================

///
/// The amount if columns an element should take up in a grid.
///
/// @param {integer} $columns - Number of columns to take up
/// @param {string} $gutter-value - Width of gutter
///
/// @example scss - Basic Usage Sass
///   div {
///     @include grid-col( 3 );
///   }
///
///   div {
///     @include grid-col( 4, 15px );
///   }
///
/// @since 1.0.0
/// @group parts
///
@mixin grid-col($columns, $grid: $default-grid) {

  margin-right: calc-gutter-width($grid) * 1%;

  // Attrs
  width: calc-grid-col-width($columns, $grid);
  float: left;

  &:last-child {
    margin-right: 0;
  }

}


///
/// Remove margin-right from target element and clear floats on the
/// following element of that type. Can be used to target the last
/// item in a row via `nth-child`. Modeled after Bourbon Neats `omega`
///
/// @param {string} $nth [1] - Target `nth-child`
///
/// @example scss - Basic Usage Sass
///
///   .no-margin {
///     @include grid-col(8);
///     @include grid-zed();
///   }
///
///   /* Span 3 columns of 12 column grid */
///   .three-col {
///     @include grid-col(4);
///     @include grid-zed(3n);
///   }
///
/// @since 1.0.0
/// @group parts
///
@mixin grid-zed($nth: 1n) {
  // sass-lint:disable
  &:nth-child(#{$nth}) {
    margin-right: 0;
  }

  &:nth-child(#{$nth}+1) {
    clear: left;
  }
  // sass-lint:enable
}


///
/// Remove the effects of a `grid-zed` include.
///
/// @param {string} $nth [1] - Target `nth-child`
/// @param {string} $gutter-value [$target-gutter] - If you are using a different gutter than default
///
/// @example scss - Basic Usage Sass
///
///   /* Span 6 columns than 4 columns of 12 column grid */
///   .post {
///
///     @include break($small) {
///       @include grid-col(6);
///       @include grid-zed(2n);
///     }
///
///     @include break($medium) {
///       @include grid-zed-reset(2n);
///       @include grid-col(4);
///       @include grid-zed(3n);
///     }
///   }
///
/// @since 1.0.0
/// @group parts
///
@mixin grid-zed-reset($nth: 1n, $grid: $default-grid) {

  &:nth-child(#{$nth}) {
    margin-right: calc-gutter-width($grid) * 1%;
  }

  &:nth-child(#{$nth}+1) {
    clear: none;
  }
}


///
/// Shift an element by a number of grid elements
///
/// @param {integer} $columns - Number of columns to take up
/// @param {string} $gutter-value - Width of gutter
///
/// @example scss - Basic Usage Sass
///   .sidebar {
///     @include grid-col( 4 );
///   }
///
///   // Inset column by one column
///   .main-content {
///     @include grid-col( 7 );
///     @include grid-shift( 1 );
///   }
///
/// @since 1.1.0
/// @group parts
///
@mixin grid-shift($columns, $grid: $default-grid) {

  margin-left: calc-grid-col-width($columns, $grid, true);

}
