// Grid Functions
// ==============

///
/// Calculate gutter width as a percentage based on target value
///
/// @param {string} $gutter-value - Width of gutter
///
/// @return {integer} value of percentage ( add `+ %`)
/// @since 1.0.0
/// @group parts
///
@function calc-gutter-width($grid) {
  $_gutter: map-get($grid, gutter);
  $_width: map-get($grid, width);
  // Get target gutter percentage
  @return (strip-unit($_gutter) / strip-unit($_width)) * 100;
}


///
/// Calculate single column width
///
/// @return {integer} value of percentage ( add `+ %`)
///
/// @since 1.0.0
/// @group parts
///
@function calc-single-col-width($grid) {

  $_gutter-width: calc-gutter-width($grid);
  $_gutter-area:  ($_gutter-width * (map-get($grid, cols) - 1));
  $_remains:      (100 - $_gutter-area);

  @return ($_remains / map-get($grid, cols));

}


///
/// Calculate the width of X columns
///
/// @param {integer} $columns - Number of columns to take up
/// @param {string} $gutter-value - Width of gutter
///
/// @return {integer} value of percentage ( add `+ %`)
///
/// @since 1.0.0
/// @group parts
///
@function calc-grid-col-width($columns, $grid, $include-gutter: false) {

  $_gutter-width: calc-gutter-width($grid);
  $_width:        ((calc-single-col-width($grid) * $columns) + ($_gutter-width * ($columns - 1)));

  @if $include-gutter {
    $_width: $_width + $_gutter-width;
  }

  @return $_width * 1%;

}
